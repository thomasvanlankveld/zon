@layer component {
  .page {
    height: 100dvh;
    box-sizing: border-box;
    padding: var(--spacing-page-padding);
    display: grid;
    gap: var(--spacing-page-gap);
    align-items: stretch;
    justify-items: stretch;
  }

  .glow {
    position: relative;
    transform-style: preserve-3d;
  }

  .glow::before {
    content: "";
    position: absolute;
    /* border-radius: 50%; */
    inset: calc(-1 * var(--spacing-3xs));
    background: var(--glow-background);
    transform: translate3d(0, 0, -1px);
    pointer-events: none;
    clip-path: var(--glow-clip-path);
    opacity: 0.3;
  }

  .glow::after {
    content: "";
    position: absolute;
    /* border-radius: 50%; */
    inset: 0rem;
    background: var(--glow-background);
    /* filter: blur(5rem); */
    transform: translate3d(0, 0, -1px);
    pointer-events: none;
    opacity: var(--glow-opacity, 0.2);
    clip-path: var(--glow-clip-path);
    filter: blur(4rem);
    /* backdrop-filter: blur(1rem); */
  }

  .glow-inset {
    position: relative;
    transform-style: preserve-3d;
  }

  .glow-inset::before {
    content: "";
    position: absolute;
    inset: -10rem;
    background: var(--glow-background);
    /* filter: blur(1rem); */
    transform: translate3d(0, 0, -1px);
    pointer-events: none;
  }

  .glow-inset::after {
    content: "";
    position: absolute;
    inset: -8rem;
    /* TODO: See if this can be transparent, or otherwise promote this glow to something at the app level */
    background: black;
    filter: blur(6rem);
    transform: translate3d(0, 0, -1px);
    pointer-events: none;
  }
}
