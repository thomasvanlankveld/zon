@layer utility {
  /* Typography */
  .text-small,
  .text-small * {
    font-size: var(--font-size-small);
    line-height: var(--line-height-small);
    font-weight: var(--font-weight-small);
  }

  .text-regular,
  .text-regular * {
    font-size: var(--font-size-regular);
    line-height: var(--line-height-regular);
    font-weight: var(--font-weight-regular);
  }

  .heading-regular,
  .heading-regular * {
    font-size: var(--font-size-heading-regular);
    line-height: var(--line-height-heading-regular);
    font-weight: var(--font-weight-heading-regular);
  }

  .heading-l,
  .heading-l * {
    font-size: var(--font-size-heading-l);
    line-height: var(--line-height-heading-l);
    font-weight: var(--font-weight-heading-l);
  }

  .heading-xl,
  .heading-xl * {
    font-size: var(--font-size-heading-xl);
    line-height: var(--line-height-heading-xl);
    font-weight: var(--font-weight-heading-xl);
  }

  .heading-xxl,
  .heading-xxl * {
    font-size: var(--font-size-heading-xxl);
    line-height: var(--line-height-heading-xxl);
    font-weight: var(--font-weight-heading-xxl);
  }

  .text-center {
    text-align: center;
  }

  .truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  /* Flexbox & grid */
  .col-span-2 {
    grid-column: span 2 / span 2;
  }

  /* Layout */
  .overflow-x-hidden {
    overflow-x: hidden;
  }

  /* Spacing */
  .ml-auto {
    margin-left: auto;
  }

  /* A11y */
  .screen-reader-only {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  /* Decoration */
  /* @property --cloudy-opacity {
    syntax: "<number>";
    inherits: true;
    initial-value: 0.01;
  }

  @keyframes cloudy-opacity-pulse {
    0%,
    100% {
      --cloudy-opacity: 0.02;
    }
    50% {
      --cloudy-opacity: 0.12;
    }
  }

  @property --cloudy-mask-position-horizontal {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 50%;
  }
  @property --cloudy-mask-position-vertical {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 50%;
  }

  @keyframes cloudy-mask-rotation {
    0%,
    100% {
      --cloudy-mask-position-horizontal: 50%;
      --cloudy-mask-position-vertical: 25%;
    }
    25% {
      --cloudy-mask-position-horizontal: 75%;
      --cloudy-mask-position-vertical: 50%;
    }
    50% {
      --cloudy-mask-position-horizontal: 50%;
      --cloudy-mask-position-vertical: 75%;
    }
    75% {
      --cloudy-mask-position-horizontal: 25%;
      --cloudy-mask-position-vertical: 50%;
    }
  } */

  /* @property --cloudy-blur {
    syntax: "<length>";
    inherits: true;
    initial-value: 0;
  } */

  /* TODO: Perhaps we can get rid of "cloudy" altogether?  */
  .cloudy {
    --cloudy-background: var(--color-cloudy-default);
    --cloudy-blur: 4rem;
    --cloudy-opacity: 0.1;

    /* --cloudy-mask: radial-gradient(
      circle at var(--cloudy-mask-position-horizontal)
        var(--cloudy-mask-position-vertical),
      rgba(0, 0, 0, 0.6),
      rgba(0, 0, 0, 0.4),
      rgba(0, 0, 0, 0.2),
      rgba(0, 0, 0, 0.1),
      rgba(0, 0, 0, 0.05) 100%
    ); */

    /* TODO: Animation part should probably be enabled with another class, so only the landing page uses it */
    /* animation:
      cloudy-mask-rotation linear 60s infinite,
      cloudy-opacity-pulse ease-in-out 21s infinite; */

    position: relative;
    transform-style: preserve-3d;

    & > * {
      transform: translate3d(0, 0, 1px);
    }

    &::before {
      content: "";
      position: absolute;
      pointer-events: none;
      transform: translate3d(0, 0, -1px);
      inset: 0;
      background: var(--cloudy-background);
      opacity: var(--cloudy-opacity);
      filter: blur(var(--cloudy-blur));
      /* mask: var(--cloudy-mask); */
    }
  }

  @property --glimmer-mask-position {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }

  @property --glimmer-mask-lightness {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }

  @keyframes glimmer-mask-flyby {
    0% {
      --glimmer-mask-position: 0%;
      --glimmer-mask-lightness: 0%;
    }
    50% {
      --glimmer-mask-lightness: 100%;
    }
    100% {
      --glimmer-mask-position: 100%;
      --glimmer-mask-lightness: 0%;
    }
  }

  .glimmer {
    --glimmer-background: var(--gradient-glimmer-default);
    --glimmer-edge-width: var(--spacing-3xs);
    --glimmer-opacity: 0.6;
    --glimmer-blur: 4rem;
    --glimmer-border-radius: 0;

    --glimmer-mask: linear-gradient(
      110deg in oklab,
      black calc(var(--glimmer-mask-position) - 20%),
      hsl(0 0 var(--glimmer-mask-lightness)) var(--glimmer-mask-position),
      black calc(var(--glimmer-mask-position) + 20%)
    );
    animation: glimmer-mask-flyby 0.5s normal forwards ease-in-out 1s;

    /* animation: none;
    &:hover {
      animation: glimmer-mask-flyby 0.5s normal forwards ease-in-out;
    } */

    position: relative;
    transform-style: preserve-3d;

    & > * {
      transform: translate3d(0, 0, 1px);
    }

    &::before {
      content: "";
      position: absolute;
      border-radius: var(--glimmer-border-radius);
      inset: calc(-1 * var(--glimmer-edge-width));
      background: var(--glimmer-background);
      transform: translate3d(0, 0, -1px);
      pointer-events: none;
      opacity: 0.8;
      mask-image: var(--glimmer-mask);
      mask-mode: luminance;
      mask-position: var(--glimmer-mask-position) var(--glimmer-mask-position);
    }

    &.glimmer-hover:hover::before {
      mask-image: none;
    }
  }

  .glow {
    --glow-background: var(--gradient-glow-default);
    --glow-opacity: 0.6;
    --glow-blur: 4rem;

    position: relative;
    transform-style: preserve-3d;

    &::after {
      content: "";
      position: absolute;
      inset: 0rem;
      background: var(--glow-background);
      transform: translate3d(0, 0, -1px);
      pointer-events: none;
      opacity: var(--glow-opacity);
      filter: blur(var(--glow-blur));
    }
  }
}
